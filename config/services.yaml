parameters:
    # Параметры для загрузки изображений
    #имя директории, для хранения изображений статей
    article_uploads: 'uploads/articles'
    #url для обращения к изображениям
    article_uploads_url: '%env(SITE_URL)%/%article_uploads%'
    #полный путь до директории хранения изображений статей
    article_uploads_dir: '%kernel.project_dir%/public/%article_uploads%'
    #Путь до директории хранения изображений, если имеем дело с url картинки
    article_uploads_img_url: ''
    # имя и email отправителя для рассылки с сайта
    sender.email: '%env(SENDER_EMAIL)%'
    sender.name: '%env(SENDER_NAME)%'
    # протокол и хост для перехода по ссылке указанной в письме рассылки
    router.request_context.scheme: '%env(SITE_BASE_SCHEME)%'
    router.request_context.host: '%env(SITE_BASE_HOST)%'
    # шаблоны email рассылок
    confirm_email_after_registration.email.template: 'email/%env(CONFIRM_EMAIL_AFTER_REGISTRATION_TEMPLATE)%'
    confirm_email_after_change.email.template: 'email/%env(CONFIRM_EMAIL_AFTER_CHANGE)%'
    user_change_subscription.email.template: 'email/%env(USER_CHANGE_SUBSCRIPTION)%'

services:
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

        bind:
            # Имя сервиса берется по названию файловой системы из oneup_flysystem.yaml
            League\Flysystem\FilesystemOperator $articleFileSystem: '@oneup_flysystem.uploads_articles_filesystem'

    # Присваиваем всем стратегиям генерации статьи, реализующим ArticleGenerationInterface, тег app.article_generation_strategy
    _instanceof:
        App\ArticleGeneration\ArticleGenerationInterface:
            tags: ['app.article_generation_strategy']

    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\Controller\SecurityController:
        tags: [ 'controller.service_arguments' ]
        bind:
            $registrationDataHandler: '@app.registration_data_handler'

    App\Controller\Admin\ProfileController:
        tags: [ 'controller.service_arguments' ]
        bind:
            $changeUserDataHandler: '@app.change_user_data_handler'


    # Сервисы email рассылок
    app.mailer:
        namespace: App\Mailer\
        resource: '../src/Mailer/'
        tags: ['app_mailer']
    # Регистрация переменной $confirmEmailMailer как экземпляра класса BaseMailer
    App\Mailer\BaseMailer $confirmEmailMailer: '@App\Mailer\ConfirmEmailMailer'
    # Регистрация переменной $subscriptionMailer как экземпляра класса BaseMailer
    App\Mailer\BaseMailer $subscriptionMailer: '@App\Mailer\SubscriptionMailer'

    # Сервисы подписчиков на события
    app.event_subscriber:
        namespace: App\EventSubscriber\
        resource: '../src/EventSubscriber/'
        tags: ['app_event_subscriber']

    # Сервис для отправки ссылок на подтверждение
    app.mailer.confirm_email:
        class: App\Mailer\ConfirmEmailMailer

    # Сервис для отправки сообщений, касающихся подписок
    app.mailer.subscription:
        class: App\Mailer\SubscriptionMailer
    # Класс контекста, осуществляющий генерацию статьи для пользователя с конкретным типом подписки
    App\ArticleGeneration\ArticleGenerator:
        arguments:
            $strategies: !tagged_iterator app.article_generation_strategy
            $defaultStrategy: '@app.article_demo_generation'

    # Демо-стратегия генерации статьи
    app.article_demo_generation:
        class: App\ArticleGeneration\Strategy\DemoGenerationStrategy
        tags: ['app.article_generation_strategy']

    # Сервис вставки продвигаемого слова
    app.promoted_word_inserter:
        class: App\ArticleGeneration\PromotedWord\PromotedWordInserter

    Twig\Extension\StringLoaderExtension:

    # Обработчики пользовательских данных
    app.user_data_handler:
        namespace: App\Security\Service\UserDataHandler\
        resource: '../src/Security/Service/UserDataHandler'
        tags: ['apps_user_data_handler']

    # Обработчики данных при регистрации нового пользователя
    app.registration_data_handler:
        class: App\Security\Service\UserDataHandler\RegistrationDataHandler

    # Обработчик данных при изменении пользовательских данных через форму в профиле
    app.change_user_data_handler:
        class: App\Security\Service\UserDataHandler\ChangeUserDataHandler
